#
#  Copyright 2015 VMware, Inc.  All rights reserved.
#  SPDX-License-Identifier: Apache-2.0 OR GPL-3.0-only
#
---
- name: create initial password request
  template:
    src: adminpass-body.json
    dest: "{{ item.file }}"
  with_items:
    - { ip: "{{ vrops_replica_node_ip }}", file: '/tmp/adminpass_body_replica.json' }
    - { ip: "{{ vrops_data_node1_ip }}", file: '/tmp/adminpass_body_data1.json' }
    - { ip: "{{ vrops_data_node2_ip }}", file: '/tmp/adminpass_body_data2.json' }
  register: create_adminpass_request
  tags:
    - vrops_cluster_init

- name: set admin password
  uri:
    url: https://{{ item.item.ip }}/casa/security/adminpassword/initial
    method: PUT
    HEADER_Content-Type: "application/json"
    body:  "{{ lookup('file',item.item.file) }}"
    validate_certs: no
    status_code: 200,500
    register: set_admin_password_result
    failed_when: "set_admin_password_result.status == '500' and set_admin_password_result.error_message_key != 'security.initial_password_already_set'"
  with_items: "{{ create_adminpass_request.results }}"
  tags:
    - vrops_cluster_init

- name: get master security certificate
  uri:
    url: https://{{ vrops_master_node_ip }}/casa/security/certificatechain/{{ vrops_master_node_ip }}/443
    method: GET
    user: "{{ default_admin_user }}"
    password: "{{ svc_vrops_admin_password }}"
    force_basic_auth: yes
    HEADER_Content-Type: "application/json"
    validate_certs: no
    status_code: 200
  register: cerificate_response
  tags:
    - vrops_cluster_init

- name: create role request
  template:
    src: role-body.json
    dest: "{{ item.file }}"
  with_items:
    - { ip: "{{ vrops_replica_node_ip }}", file: '/tmp/role_body_replica.json', roles: '["REPLICA","DATA","UI"]', thumbprint: "{{ cerificate_response.json[0].thumbprint }}" }
    - { ip: "{{ vrops_data_node1_ip }}", file: '/tmp/role_body_data1.json', roles: '["DATA"]', thumbprint: "{{ cerificate_response.json[0].thumbprint }}" }
    - { ip: "{{ vrops_data_node2_ip }}", file: '/tmp/role_body_data2.json', roles: '["DATA"]', thumbprint: "{{ cerificate_response.json[0].thumbprint }}" }
  register: create_role_request
  tags:
    - vrops_cluster_init

- name: set cluster roles
  uri:
    url: https://{{ item.item.ip }}/casa/deployment/slice/role
    method: POST
    user: "{{ default_admin_user }}"
    password: "{{ svc_vrops_admin_password }}"
    force_basic_auth: yes
    HEADER_Content-Type: "application/json"
    body: "{{ lookup('file',item.item.file) }}"
    validate_certs: no
    status_code: 202
  with_items: "{{ create_role_request.results }}"
  tags:
    - vrops_cluster_init

- name: get slice uuid
  uri:
    url: "https://{{ item.ip }}/casa/deployment/slice"
    method: GET
    user: "{{ default_admin_user }}"
    password: "{{ svc_vrops_admin_password }}"
    force_basic_auth: yes
    HEADER_Content-Type: "application/json"
    validate_certs: no
    status_code: 200
  with_items:
    - { ip: "{{ vrops_replica_node_ip }}", file: '/tmp/vrops_join_cluster_replica.json' }
    - { ip: "{{ vrops_data_node1_ip }}", file: '/tmp/vrops_join_cluster_node1.json' }
    - { ip: "{{ vrops_data_node2_ip }}", file: '/tmp/vrops_join_cluster_node2.json' }
  register: get_uuid_reponse
  tags:
    - vrops_cluster_init

- debug: msg="{{ get_uuid_reponse.results }}"
  tags:
    - vrops_cluster_init

- name: create join cluster request
  template:
    src: cluster-join-body.json
    dest: "{{ item.item.file }}"
  with_items: "{{ get_uuid_reponse.results }}"
  tags:
    - vrops_cluster_init

- name: join cluster
  uri:
    url: "https://{{ item.item.ip }}/casa/deployment/cluster/join?admin={{ vrops_master_node_ip }}"
    method: POST
    user: "{{ default_admin_user }}"
    password: "{{ svc_vrops_admin_password }}"
    force_basic_auth: yes
    HEADER_Content-Type: "application/json"
    body: "{{ lookup('file',item.item.file) }}"
    validate_certs: no
    status_code: 200
  with_items: "{{ get_uuid_reponse.results }}"
  tags:
    - vrops_cluster_init
